#!/bin/zsh
project="tEmplate"
projectc="TEMPLATE"
aurcat="none"

version=$1
if [[ $version = '' ]]; then
    echo 'Version number?'
    echo -n '> '
    read version
fi

rm -rf $project.egg-info __pycache__ $project/__pycache__ dist build

date=$(date '+%Y-%m-%d')
datel=$(date '+%Y-%m-%d %H:%M%z')
datep=$(date '+%Y%m%d')

sed "s/version=.*/version='$version',/g" setup.py -i
sed "s/release = .*/release = '$version'/g" docs/conf.py -i
sed "s/:Version: .*/:Version: $version/g" docs/*.rst -i
sed "s/# $projectc v.*/# $projectc v$version/" $project/*.py -i
sed "s/__version__ = .*/__version__ = '$version'/g" $project/__init__.py -i
sed "s/pkgver=.*/pkgver=$version/g" PKGBUILD -i
sed "s/pkgver=.*/pkgver=$version/g" PKGBUILD-2 -i
sed "s/pkgver=.*/pkgver=$datep/g" PKGBUILD-git -i
sed "s/pkgver=.*/pkgver=$datep/g" PKGBUILD-2-git -i
sed "s/:Date: .*/:Date: $date/g" docs/*.rst -i

cp docs/README.rst docs/CHANGELOG.rst docs/CONTRIBUTING.rst .
cp docs/README.rst README

python -c "import $project"
if [[ $? = 1 ]]; then
    echo "Import failed.  Fix your code or don't come back."
    exit 1
fi

./tests.py
if [[ $? = 1 ]]; then
    echo "Tests failed.  Fix your code or don't come back."
    exit 1
fi

echo 'This is the last chance to quit.  Hit ^C now if you want to.'
read bailout

./setup.py sdist upload

md5out=$(md5sum 'dist/'$project'-'$version'.tar.gz'|awk '{print $1}')
sed "s/md5sums=.*/md5sums=('$md5out')/" PKGBUILD -i
sed "s/md5sums=.*/md5sums=('$md5out')/" PKGBUILD-2 -i
rm -rf MKPKGBUILD
mkdir -p MKPKGBUILD/python{,2}'-'$project{,-git}
cp PKGBUILD MKPKGBUILD/python-$project
cp PKGBUILD-2 MKPKGBUILD/python2-$project/PKGBUILD
cp PKGBUILD-git MKPKGBUILD/python-$project"-git/PKGBUILD"
cp PKGBUILD-2-git MKPKGBUILD/python2-$project"-git/PKGBUILD"
cd MKPKGBUILD
tar -czvf python-$project.src.tar.gz python-$project
tar -czvf python2-$project.src.tar.gz python-$project
tar -czvf python-$project"-git".src.tar.gz python-$project"-git"
tar -czvf python2-$project"-git".src.tar.gz python-$project"-git"
burp -u Kwpolska -c $aurcat python{,2}$project"-"{,-git}.src.tar.gz

cd ..
rm -rf MKPKGBUILD

if [[ $2 != '-c' ]]; then
    echo 'Commit message (sans the version?)'
    echo -n '> '
    read commitmsg
    if [[ commitmsg = '' ]]; then
        cm='t'
    fi
else
    cm='t'
fi

rm -rf $project.egg-info __pycache__ $project/__pycache__ dist build

git add *
if [[ $? != '0' ]]; then
    echo 'Open another terminal and fix the errors.'
    read dn
    git add *
    if [[ $? != '0' ]]; then
        echo 'But please test your changes using that other terminal.'
        read dn2
        git add *
    fi
fi

if [[ $cm = 't' ]]; then
    git commit -as
else
    git commit -asm "v$version: $commitmsg"
fi

git tag -sa "v$version" -m "Version $version"
git push
git push --tags
